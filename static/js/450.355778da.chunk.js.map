{"version":3,"file":"static/js/450.355778da.chunk.js","mappings":"8SAEMA,EAAW,gCACXC,EAAU,mCACVC,EAAW,sBAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACcC,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,GAAJ,OAAeE,EAAf,mBAAkCD,IADrD,cACCI,EADD,OAECC,EAAOD,EAAKC,KAAKC,QAFlB,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,0FACcL,EAAAA,EAAAA,GAAM,GAAD,OACnBJ,EADmB,gCACaC,EADb,kBAC8BQ,IAFjD,cACCJ,EADD,OAICC,EAAOD,EAAKC,KAAKC,QAJlB,kBAKED,GALF,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACcP,EAAAA,EAAAA,GAAM,GAAD,OACnBJ,EADmB,iBACFW,EADE,oBACYV,EADZ,oBADnB,cACCI,EADD,yBAIEA,EAAKC,MAJP,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,wFACcP,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,iBAAqBW,EAArB,4BAA2CV,IAD9D,cACCI,EADD,yBAEEA,EAAKC,KAAKO,MAFZ,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCH,GAAlC,wFACcP,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,iBAAqBW,EAArB,4BAA2CV,IAD9D,cACCI,EADD,yBAEEA,EAAKC,KAAKC,SAFZ,kE,4IC7BMQ,EAAqBC,EAAAA,GAAAA,IAAH,6HAQlBC,EAAqBD,EAAAA,GAAAA,GAAH,+KASlBE,EAAyBF,EAAAA,GAAAA,EAAH,+DAKtBG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,mE,SCjBRK,EAAe,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC7B,OACE,SAACP,EAAD,UACGO,EAAWC,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACd,SAACT,EAAD,WACE,UAACE,EAAD,CAAUQ,GAAE,kBAAahB,GAAzB,WACE,gBACEiB,IAAG,yCAAoCH,GACvCI,IAAI,GACJ,YAAW,WAEb,SAACX,EAAD,UACGM,EAAQ,KAAO,IAAIM,KAAKJ,GAAcK,cAAgB,UARpCpB,EADX,KAgBrB,ECGD,EAzBiB,WACf,OAAoCqB,EAAAA,EAAAA,UAAS,IAA7C,eAAOV,EAAP,KAAmBW,EAAnB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACHJ,GAAWC,GAAa,IAC7BhC,EAAAA,EAAAA,MACGoC,MAAK,SAAAjC,GACJ2B,EAAc3B,GACd6B,GAAa,EACd,IACAK,OAAM,SAAAC,GAAG,OAAIJ,EAASI,EAAb,GAEb,GAAE,IACH,IAAMjB,EAAQ,iBAAiBkB,cAC/B,OACE,4BACE,wBAAKlB,IACJU,GAAY,SAACS,EAAA,EAAD,KAAiB,SAACtB,EAAD,CAAcC,WAAYA,IACvDc,IAAS,uBAAIA,MAGnB,C","sources":["components/API/API.jsx","components/HomePage/HomePageList.styled.jsx","components/HomePage/HomePageList.jsx","components/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4c160d44a5a09b17954e70f9ad157f70';\nconst trending = 'trending/movie/day?';\n\nexport async function getMovie() {\n  const resp = await axios(`${BASE_URL}${trending}api_key=${API_KEY}`);\n  const data = resp.data.results;\n  return data;\n}\n\nexport async function getMovieBySearch(search) {\n  const resp = await axios(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}`\n  );\n  const data = resp.data.results;\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const resp = await axios(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n}\n\nexport async function getMovieByIdCast(id) {\n  const resp = await axios(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n  return resp.data.cast;\n}\n\nexport async function getMovieByIdReview(id) {\n  const resp = await axios(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n  return resp.data.results;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomePageMoviesList = styled.div`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: center;\n`;\n\nexport const HomePageMoviesItem = styled.li`\n  padding: 0;\n  transition: transform 0.35s;\n  :hover {\n    transform: scale(1.05);\n    box-shadow: 10px 10px 10px -8px rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const HomePageMoviesItemText = styled.p`\n  max-width: 250px;\n  padding: 15px;\n`;\n\nexport const CardLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import { CardLink } from './HomePageList.styled';\nimport {\n  HomePageMoviesList,\n  HomePageMoviesItem,\n  HomePageMoviesItemText,\n} from './HomePageList.styled';\nimport PropTypes from 'prop-types';\n\nexport const HomePageList = ({ moviesList }) => {\n  return (\n    <HomePageMoviesList>\n      {moviesList.map(({ id, title, poster_path, release_date }) => (\n        <HomePageMoviesItem key={id}>\n          <CardLink to={`/movies/${id}`}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt=\"\"\n              max-width={'100px'}\n            />\n            <HomePageMoviesItemText>\n              {title + ' (' + new Date(release_date).getFullYear() + ')'}\n            </HomePageMoviesItemText>\n          </CardLink>\n        </HomePageMoviesItem>\n      ))}\n    </HomePageMoviesList>\n  );\n};\n\nHomePageList.propTypes = {\n  moviesList: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { ClipLoader } from 'react-spinners';\nimport { getMovie } from '../API/API';\nimport { HomePageList } from './HomePageList';\n\nconst HomePage = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!isLoading) setIsLoading(true);\n    getMovie()\n      .then(data => {\n        setMoviesList(data);\n        setIsLoading(false);\n      })\n      .catch(err => setError(err));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const title = 'Trending today'.toUpperCase();\n  return (\n    <div>\n      <h1>{title}</h1>\n      {isLoading ? <ClipLoader /> : <HomePageList moviesList={moviesList} />}\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["BASE_URL","API_KEY","trending","getMovie","axios","resp","data","results","getMovieBySearch","search","getMovieById","id","getMovieByIdCast","cast","getMovieByIdReview","HomePageMoviesList","styled","HomePageMoviesItem","HomePageMoviesItemText","CardLink","Link","HomePageList","moviesList","map","title","poster_path","release_date","to","src","alt","Date","getFullYear","useState","setMoviesList","isLoading","setIsLoading","error","setError","useEffect","then","catch","err","toUpperCase","ClipLoader"],"sourceRoot":""}