{"version":3,"file":"static/js/395.5c889ad0.chunk.js","mappings":"8SAEMA,EAAW,gCACXC,EAAU,mCACVC,EAAW,sBAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACcC,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,GAAJ,OAAeE,EAAf,mBAAkCD,IADrD,cACCI,EADD,OAECC,EAAOD,EAAKC,KAAKC,QAFlB,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,0FACcL,EAAAA,EAAAA,GAAM,GAAD,OACnBJ,EADmB,gCACaC,EADb,kBAC8BQ,IAFjD,cACCJ,EADD,OAICC,EAAOD,EAAKC,KAAKC,QAJlB,kBAKED,GALF,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACcP,EAAAA,EAAAA,GAAM,GAAD,OACnBJ,EADmB,iBACFW,EADE,oBACYV,EADZ,oBADnB,cACCI,EADD,yBAIEA,EAAKC,MAJP,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,wFACcP,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,iBAAqBW,EAArB,4BAA2CV,IAD9D,cACCI,EADD,yBAEEA,EAAKC,KAAKO,MAFZ,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCH,GAAlC,wFACcP,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,iBAAqBW,EAArB,4BAA2CV,IAD9D,cACCI,EADD,yBAEEA,EAAKC,KAAKC,SAFZ,kE,kIC9BMQ,EAAqBC,EAAAA,GAAAA,GAAH,gNAUlBC,EAAUD,EAAAA,GAAAA,IAAH,+D,SCVPE,EAAe,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC9C,OACE,UAACN,EAAD,WACGM,GACC,SAACJ,EAAD,CAASK,IAAG,yCAAoCD,GAASE,IAAI,MAE7D,qCAEF,uBAAIJ,KACJ,uBAAIC,MAGT,ECZYI,EAAWR,EAAAA,GAAAA,GAAH,4IC4BrB,EAxBa,WACX,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,IAAiBgB,GAAUG,MAAK,SAAA1B,GAAI,OAAIsB,EAAUtB,EAAd,GACrC,GAAE,CAACuB,KAGF,SAACJ,EAAD,UACGE,EAAOM,OAAS,EACbN,EAAOO,KAAI,gBAAGb,EAAH,EAAGA,UAAWD,EAAd,EAAcA,KAAMe,EAApB,EAAoBA,aAApB,OACT,SAAChB,EAAD,CAEEE,UAAWA,EACXD,KAAMA,EACNE,MAAOa,GAHFf,EAFE,IAQX,8CAGT,C","sources":["components/API/API.jsx","components/MovieDetails/Cast/CastItemCard.styled.jsx","components/MovieDetails/Cast/CastItemCard.jsx","components/MovieDetails/Cast/Cast.styled.jsx","components/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4c160d44a5a09b17954e70f9ad157f70';\nconst trending = 'trending/movie/day?';\n\nexport async function getMovie() {\n  const resp = await axios(`${BASE_URL}${trending}api_key=${API_KEY}`);\n  const data = resp.data.results;\n  return data;\n}\n\nexport async function getMovieBySearch(search) {\n  const resp = await axios(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}`\n  );\n  const data = resp.data.results;\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const resp = await axios(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n}\n\nexport async function getMovieByIdCast(id) {\n  const resp = await axios(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n  return resp.data.cast;\n}\n\nexport async function getMovieByIdReview(id) {\n  const resp = await axios(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n  return resp.data.results;\n}\n","import styled from 'styled-components';\n\nexport const CastItemCardStyled = styled.li`\n  padding: 10px;\n  box-shadow: 10px 10px 10px -8px rgba(0, 0, 0, 0.75);\n  text-align: center;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: end;\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  max-width: 100%;\n`;\n","import { CastItemCardStyled, CastImg } from './CastItemCard.styled';\n\nexport const CastItemCard = ({ name, character, photo }) => {\n  return (\n    <CastItemCardStyled>\n      {photo ? (\n        <CastImg src={`https://image.tmdb.org/t/p/w300${photo}`} alt=\"\" />\n      ) : (\n        <p>No photo</p>\n      )}\n      <p>{name}</p>\n      <p>{character}</p>\n    </CastItemCardStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  list-style: none;\n  padding: 0;\n  justify-content: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieByIdCast } from 'components/API/API';\nimport { CastItemCard } from './CastItemCard';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    getMovieByIdCast(moviesId).then(resp => setActors(resp));\n  }, [moviesId]);\n\n  return (\n    <CastList>\n      {actors.length > 0\n        ? actors.map(({ character, name, profile_path }) => (\n            <CastItemCard\n              key={name}\n              character={character}\n              name={name}\n              photo={profile_path}\n            />\n          ))\n        : 'Oooops, there is no information about cast'}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","trending","getMovie","axios","resp","data","results","getMovieBySearch","search","getMovieById","id","getMovieByIdCast","cast","getMovieByIdReview","CastItemCardStyled","styled","CastImg","CastItemCard","name","character","photo","src","alt","CastList","useState","actors","setActors","moviesId","useParams","useEffect","then","length","map","profile_path"],"sourceRoot":""}