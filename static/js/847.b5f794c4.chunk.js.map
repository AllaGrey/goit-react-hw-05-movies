{"version":3,"file":"static/js/847.b5f794c4.chunk.js","mappings":"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","sources":["components/API/API.jsx","components/MovieDetails/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4c160d44a5a09b17954e70f9ad157f70';\nconst trending = 'trending/movie/day?';\n\nexport async function getMovie() {\n  const resp = await axios(`${BASE_URL}${trending}api_key=${API_KEY}`);\n  const data = resp.data.results;\n  return data;\n}\n\nexport async function getMovieBySearch(search) {\n  const resp = await axios(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}`\n  );\n  const data = resp.data.results;\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const resp = await axios(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n}\n\nexport async function getMovieByIdCast(id) {\n  const resp = await axios(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n  return resp.data.cast;\n}\n\nexport async function getMovieByIdReview(id) {\n  const resp = await axios(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n  return resp.data.results;\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetailsSection = styled.div`\n  padding-top: 20px;\n`;\n\nexport const MainMovieInfo = styled.div`\n  display: flex;\n  gap: 15px;\n  border-bottom: 2px solid darkblue;\n  padding: 15px;\n`;\n\nexport const MovieTextInfo = styled.div`\n  max-width: 50vw;\n`;\n\nexport const MovieImg = styled.img`\n  display: block;\n  max-width: 30vw;\n`;\n\nexport const Title = styled.h1`\n  font-size: 22px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n`;\n\nexport const AddLink = styled(Link)`\n  text-decoration: none;\n  color: brown;\n  font-size: 18px;\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  width: 80px;\n  height: 30px;\n  border: 2px solid darkblue;\n  font-weight: 600;\n  color: darkblue;\n  padding: 10px;\n\n  :hover {\n    background-color: darkblue;\n    color: white;\n  }\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'components/API/API';\nimport {\n  MovieDetailsSection,\n  MainMovieInfo,\n  Title,\n  List,\n  AddLink,\n  MovieImg,\n  MovieTextInfo,\n  BackLink,\n} from './MovieDetails.styled';\nimport { toast } from 'react-hot-toast';\nimport { ClipLoader } from 'react-spinners';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { moviesId } = useParams();\n  const { state } = useLocation();\n  const backLink = useRef(state === null ? '/' : state.from);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieById(moviesId)\n      .then(resp => {\n        setIsLoading(false);\n        if (resp.length === 0)\n          throw new Error('Oooops, something went wrong...');\n        setMovie(resp);\n      })\n      .catch(({ message }) => toast.error(message));\n  }, [moviesId]);\n\n  const { title, vote_average, poster_path, overview, genres, release_date } =\n    movie;\n\n  return (\n    <MovieDetailsSection>\n      <BackLink to={backLink.current}>Go back</BackLink>\n      {isLoading && (\n        <div>\n          <ClipLoader />\n        </div>\n      )}\n      <MainMovieInfo>\n        <MovieImg\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt=\"\"\n        />\n        <MovieTextInfo>\n          <Title>{title + ' (' + release_date + ')'}</Title>\n          <p>User Score: {Math.ceil(vote_average * 10)}%</p>\n          <h2>Owerview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <List>\n            {genres && genres.map(({ name }) => <li key={name}>{name}</li>)}\n          </List>\n        </MovieTextInfo>\n      </MainMovieInfo>\n      <h3>Additional information</h3>\n      <List>\n        <li>\n          <AddLink to={`/movies/${moviesId}/cast`}>Cast</AddLink>\n        </li>\n        <li>\n          <AddLink to={`/movies/${moviesId}/reviews`}>Reviews</AddLink>\n        </li>\n      </List>\n      <Outlet />\n    </MovieDetailsSection>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["BASE_URL","API_KEY","trending","getMovie","axios","resp","data","results","getMovieBySearch","search","getMovieById","id","getMovieByIdCast","cast","getMovieByIdReview","MovieDetailsSection","styled","MainMovieInfo","MovieTextInfo","MovieImg","Title","List","AddLink","Link","BackLink","useState","movie","setMovie","isLoading","setIsLoading","moviesId","useParams","state","useLocation","backLink","useRef","from","useEffect","then","length","Error","catch","message","toast","title","vote_average","poster_path","overview","genres","release_date","to","current","ClipLoader","src","alt","Math","ceil","map","name"],"sourceRoot":""}